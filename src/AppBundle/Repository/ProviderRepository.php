<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Customer;
use AppBundle\Helper\MiscTools;
use Doctrine\ORM\EntityRepository;

/**
 * ProviderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProviderRepository extends EntityRepository
{
    public function getAll($filters)
    {
        $queryBuilder = $this->createQueryBuilder('provider')
            ->join('provider.catalogs', 'catalogs')
            ->join('catalogs.catalogType', 'catalogType')
            ->join('catalogs.genderType', 'genderType');

        if (!empty($filters['lat']) && !empty($filters['lng'])) {
            $queryBuilder->join('provider.location', 'location')
                ->addSelect('GEO_DISTANCE(location.lat, location.lng, :latCustomer, :lngCustomer) as HIDDEN distance')
                ->having('distance <= provider.range')
                ->setParameter('latCustomer', $filters['lat'])
                ->setParameter('lngCustomer', $filters['lng']);
        }

        if (!empty($filters['isAvailable'])) {
            $isAvailable = MiscTools::stringToBool($filters['isAvailable']);
            $queryBuilder->andWhere('provider.isAvailable = :isAvailable');
            $queryBuilder->setParameter('isAvailable', $isAvailable);
        }

        if (!empty($filters['genderType'])) {
            $queryBuilder->andWhere('catalogs.genderType = :genderTypeId');
            $queryBuilder->setParameter('genderTypeId', $filters['genderType']);
        }

        if (!empty($filters['catalogType'])) {
            $queryBuilder->andWhere('catalogs.catalogType = :catalogTypeId');
            $queryBuilder->setParameter('catalogTypeId', $filters['catalogType']);
        }

        return $queryBuilder->getQuery()->getResult();
    }
}
